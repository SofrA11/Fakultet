CREATE TABLE ZAPOSLENI
(
	MBR NUMBER(5,0),
	IME VARCHAR(30) NOT NULL,
	IME_RODITELJA VARCHAR(30),
	PREZIME VARCHAR(30) NOT NULL,
	ADRESA VARCHAR(150),
	ODELJENJE VARCHAR(20),
	CONSTRAINT ZAPOSLENI_PK PRIMARY KEY(MBR),
	CONSTRAINT ODELJENJE_CK CHECK(ODELJENJE IN ('Administracija', 'Proizvodnja', 'Prodaja'))
);

INSERT INTO ZAPOSLENI VALUES(100, 'Milan', 'Milos', 'Milanovic', 'Bulevar Nemanjica 99, Nis', 'Administracija');
INSERT INTO ZAPOSLENI VALUES(101, 'Sava', 'Sasa', 'Savic', 'Obilicev Venac 88, Beograd', 'Proizvodnja');
INSERT INTO ZAPOSLENI VALUES(102, 'Ivana', 'Ivan', 'Ivanovic', 'Kornelija Stankovica 77, Novi Sad', 'Proizvodnja');
INSERT INTO ZAPOSLENI VALUES(103, 'Branko', 'Blagoje', 'Brankovic', 'Leskovac, Kralja Milana 66, Leskovac', 'Proizvodnja');
INSERT INTO ZAPOSLENI VALUES(104, 'Jelena', 'Jovan', 'Jelic', 'Kralja Petra 55, Nis', 'Proizvodnja');
INSERT INTO ZAPOSLENI VALUES(105, 'Zoran', 'Zaharije', 'Zoric', 'Jovana Jovanovica Zmaja 5, Zrenjanin', 'Prodaja');

CREATE TABLE PRAVO_PRISTUPA
(
	DOKUMENT NUMBER NOT NULL REFERENCES DOKUMENT(ID_DOKUMENTA),
	ZAPOSLENI NUMBER(13,0) NOT NULL REFERENCES ZAPOSLENI(MBR),
	DATUM DATE NOT NULL,
	PRAVO CHAR(1) NOT NULL,
	CONSTRAINT PRISTUPD_FK FOREIGN KEY(DOKUMENT) REFERENCES DOKUMENT(ID_DOKUMENTA),
	CONSTRAINT PRISTUPZ_FK FOREIGN KEY(ZAPOSLENI) REFERENCES ZAPOSLENI(MBR),
	CONSTRAINT PRISTUP_PK PRIMARY KEY(DOKUMENT, ZAPOSLENI),
	CONSTRAINT PRAVO_CK CHECK (PRAVO IN ('C', 'P'))
);

INSERT INTO PRAVO_PRISTUPA VALUES(1, 101, '25-JAN-13', 'P');
INSERT INTO PRAVO_PRISTUPA VALUES(1, 100, '25-JAN-13', 'P');
INSERT INTO PRAVO_PRISTUPA VALUES(2, 102, '15-APR-13', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(2, 103, '17-APR-13', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(2, 104, '17-APR-13', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(3, 101, '20-APR-13', 'P');
INSERT INTO PRAVO_PRISTUPA VALUES(4, 101, '10-MAY-13', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(4, 102, '15-MAY-13', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(5, 101, '30-APR-13', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(5, 102, '01-APR-13', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(6, 101, '11-APR-13', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(8, 100, '07-JUL-12', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(9, 101, '09-JAN-12', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(9, 102, '12-JAN-12', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(9, 103, '12-JAN-12', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(9, 104, '12-JAN-12', 'C');
INSERT INTO PRAVO_PRISTUPA VALUES(9, 105, '12-JAN-12', 'C');

CREATE TABLE DOKUMENT
(
	ID_DOKUMENTA NUMBER,
	NAZIV VARCHAR(50) NOT NULL,
	DATUM_KREIRANJA DATE NOT NULL,
	MBR_VLASNIKA NUMBER(5,0) NOT NULL ,
	TIP VARCHAR(40) NOT NULL,
	CONSTRAINT DOKUMENT_PK PRIMARY KEY(ID_DOKUMENTA),
	CONSTRAINT ZAPOSLENI_FK FOREIGN KEY (MBR_VLASNIKA) REFERENCES ZAPOSLENI(MBR),
	CONSTRAINT TIP_CK CHECK(TIP IN ('Izvestaj', 'Plan', 'Zapisnik'))
);

INSERT INTO DOKUMENT VALUES(1, 'Zahtevi', '25-JAN-13', 105, 'Zapisnik');
INSERT INTO DOKUMENT VALUES(2, 'Projektovanje', '15-APR-13', 101, 'Plan');
INSERT INTO DOKUMENT VALUES(3, 'Razvoj', '22-JUN-12', 102, 'Plan');
INSERT INTO DOKUMENT VALUES(4, 'Testiranje', '10-AUG-12', 103, 'Izvestaj');
INSERT INTO DOKUMENT VALUES(5, 'Validacija', '30-SEP-12', 104, 'Izvestaj');
INSERT INTO DOKUMENT VALUES(6, 'Odrzavanje', '11-OCT-12', 102, 'Izvestaj');
INSERT INTO DOKUMENT VALUES(7, 'Porezi', '05-FEB-13', 100, 'Izvestaj');
INSERT INTO DOKUMENT VALUES(8, 'Prihodi', '07-JUL-12', 105, 'Izvestaj');
INSERT INTO DOKUMENT VALUES(9, 'Statut', '09-JAN-13', 100, 'Zapisnik');

1.
--KREIRANJE POGLEDA
CREATE VIEW ZAPOSLENI_PRAVO_PRISTUPA
AS SELECT ID_DOKUMENTA,NAZIV,IME,PREZIME
FROM ZAPOSLENI INNER JOIN PRAVO_PRISTUPA ON ZAPOSLENI.MBR=PRAVO_PRISTUPA.ZAPOSLENI INNER JOIN DOKUMENT ON DOKUMENT.ID_DOKUMENTA=PRAVO_PRISTUPA.DOKUMENT
WHERE ZAPOSLENI.MBR=PRAVO_PRISTUPA.ZAPOSLENI;

--NA OSNOVU POGLEDA KREIRATI LISTU...
SELECT * FROM ZAPOSLENI_PRAVO_PRISTUPA;

--SORTURATI KREIRANU LISTU U OPADAJUCI REDOLED PREMA BROJU ZAPOSLENIH KOJI IMAJU PRAVO PRISTUPA
SELECT ID_DOKUMENTA, NAZIV, COUNT(*) BROJ_ZAPOSLENIH
FROM ZAPOSLENI_PRAVO_PRISTUPA
GROUP BY ID_DOKUMENTA, NAZIV
ORDER BY BROJ_ZAPOSLENIH DESC;

2. 
INSERT INTO PRAVO_PRISTUPA (DOKUMENT,ZAPOSLENI, DATUM, PRAVO)
VALUES((SELECT ID_DOKUMENTA FROM DOKUMENT WHERE NAZIV='Odrzavanje'),(SELECT MBR FROM ZAPOSLENI WHERE IME='Milan' AND PREZIME='Milanovic'),SYSDATE,'C');

3.
DELETE
FROM PRAVO_PRISTUPA
WHERE PRAVO_PRISTUPA.DOKUMENT=(SELECT ID_DOKUMENTA FROM DOKUMENT WHERE NAZIV='Statut');

4.
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Oracle.ManagedDataAccess.Client;

namespace ConsoleApp2
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                string src = "Data Source=160.99.12.92/GISLAB_PD; User Id=S6969;Password=LoL;";
                OracleConnection con = new OracleConnection(src);

                Console.WriteLine("Unesi naziv");
                string naziv;
                naziv = Console.ReadLine();
                con.Open();

                string komanda = "SELECT MBR,IME,PREZIME FROM ZAPOSLENI INNER JOIN PRAVO_PRISTUPA ON ZAPOSLENI.MBR = PRAVO_PRISTUPA.ZAPOSLENI INNER JOIN DOKUMENT ON DOKUMENT.ID_DOKUMENTA = PRAVO_PRISTUPA.DOKUMENT"
                   + " WHERE PRAVO = 'P' AND NAZIV='" + naziv + "'";
                OracleCommand cmd = new OracleCommand(komanda, con);

                OracleDataReader r = cmd.ExecuteReader();
                while (r.Read())
                {
                    string ime, prezime;
                    long mbr;
                    mbr = r.GetInt32(0);
                    ime = r.GetString(1);
                    prezime = r.GetString(2);
                    Console.WriteLine("MBR=" + mbr + ", Ime i Prezime: " + ime + " " + prezime);
                }
                r.Close();
            }
            catch (Exception ex)
            {
                Console.WriteLine("Doslo je do greske prilikom pristupanja bazi podataka: " + ex.Message);
            }

        }
    }
}
